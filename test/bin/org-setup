#!/usr/bin/env node
var jsforce = require('../../lib/jsforce');
var archiver = require('archiver');

var archive = archiver('zip');
archive.bulk({
  expand: true,
  cwd: __dirname + '/../package',
  src: [ 'JSforceTestSuite/**' ]
});
archive.finalize();

var conn = new jsforce.Connection();
conn.login(process.env.SF_USERNAME, process.env.SF_PASSWORD)
  .then(function() {
    console.log('Deploying test suite package...');
    conn.metadata.pollTimeout = 30*1000;
    return conn.metadata.deploy(archive).complete({ details: true });
  })
  .then(function(res) {
    console.log('Package deployment Status: ', res.status);
    if (res.status !== 'Succeeded') {
      console.log(res);
      throw new Error('Deployment Not Successfully Finished: ' +res.status);
    }
  })
  .then(function() {
    return conn.sobject('BigTable__c').count();
  })
  .then(function(count) {
    if (count===0) {
      console.log('Creating BigTable records...');
      var records = new Array(551).join('_').split('').map(function(){
        return { OwnerId: conn.userInfo.id };
      });
      return jsforce.Promise.all(
        conn.bulk.load('BigTable__c', 'insert', records),
        conn.bulk.load('BigTable__c', 'insert', records),
        conn.bulk.load('BigTable__c', 'insert', records),
        conn.bulk.load('BigTable__c', 'insert', records)
      ).then(function() {
        console.log('Records inserted to BigTable')
      })
    }
  })
  .then(function() {
    return conn.sobject('PushTopic').count({ Name: 'JSforceTestAccountUpdates' });
  })
  .then(function(count) {
    if (count === 0) {
      return conn.sobject('PushTopic').create({
        Name: 'JSforceTestAccountUpdates',
        Query: 'SELECT Id, Name FROM Account',
        ApiVersion: conn.version,
        NotifyForFields: 'Referenced',
        NotifyForOperationCreate: true,
        NotifyForOperationUpdate: true,
        NotifyForOperationDelete: false,
        NotifyForOperationUndelete: false
      }).then(function() {
        console.log('PushTopic created for Streaming API');
      });
    }
  })
  .catch(function(err) {
    console.error(err);
  });
